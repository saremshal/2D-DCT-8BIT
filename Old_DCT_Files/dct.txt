#include <stdio.h>
#include <stdlib.h>
#include<stdint.h>
#include <math.h>


static const double S[] = {
	0.353553390593273762200422,
	0.254897789552079584470970,
	0.270598050073098492199862,
	0.300672443467522640271861,
	0.353553390593273762200422,
	0.449988111568207852319255,
	0.653281482438188263928322,
	1.281457723870753089398043,
};

static const double A[] = {
	NAN,
	0.707106781186547524400844,
	0.541196100146196984399723,
	0.707106781186547524400844,
	1.306562964876376527856643,
	0.382683432365089771728460,
};


// DCT type II, scaled. Algorithm by Arai, Agui, Nakajima, 1988.
// See: https://web.stanford.edu/class/ee398a/handouts/lectures/07-TransformCoding.pdf#page=30
void FastDct8_transform(double vector[static 8]) {
	const double v0 = vector[0] + vector[7];
	const double v1 = vector[1] + vector[6];
	const double v2 = vector[2] + vector[5];
	const double v3 = vector[3] + vector[4];
	const double v4 = vector[3] - vector[4];
	const double v5 = vector[2] - vector[5];
	const double v6 = vector[1] - vector[6];
	const double v7 = vector[0] - vector[7];
	//printf("=====Stage 1=====\n");
	//printf(" v0:%d\n v1:%d\n v2:%d\n v3:%d\n v4:%d\n v5:%d\n v6:%d\n v7:%d\n",v0,v1,v2,v3,v4,v5,v6,v7 );


	const double v8 = v0 + v3;
	const double v9 = v1 + v2;
	const double v10 = v1 - v2;
	const double v11 = v0 - v3;
	const double v12 = -v4 - v5;
	const double v13 = (v5 + v6) * A[3];
	const double v14 = v6 + v7;
	
	const double v15 = v8 + v9;
	const double v16 = v8 - v9;
	const double v17 = (v10 + v11) * A[1];
	const double v18 = (v12 + v14) * A[5];
	
	const double v19 = -v12 * A[2] - v18;
	const double v20 = v14 * A[4] - v18;
	
	const double v21 = v17 + v11;
	const double v22 = v11 - v17;
	const double v23 = v13 + v7;
	const double v24 = v7 - v13;
	
	const double v25 = v19 + v24;
	const double v26 = v23 + v20;
	const double v27 = v23 - v20;
	const double v28 = v24 - v19;
	
	vector[0] = S[0] * v15;
	vector[1] = S[1] * v26;
	vector[2] = S[2] * v21;
	vector[3] = S[3] * v28;
	vector[4] = S[4] * v16;
	vector[5] = S[5] * v25;
	vector[6] = S[6] * v22;
	vector[7] = S[7] * v27;

	//printf("=====Result=====\n");
    for(int i = 0; i < 8; i++)
      printf("%d ", vector[i]);

    printf("\n");
}


int(main( void )){
    static double inputVector[] = {250,2,-83,4,5,-200,7,250};
    FastDct8_transform(inputVector);
    return(1);
}